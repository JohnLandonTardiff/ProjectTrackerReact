{"ast":null,"code":"import { projectsList, writeProjects } from \"../../ProjectsPage/ProjectClass\";\nimport { SavedColor, writeColors } from \"../SavedColorComponent/SavedColorClass\";\nexport function addColor(colorList, color, isProject, projectId) {\n  const colorName = document.getElementById(\"color-name-input\").value;\n  if (colorList.find(color => color.name === colorName)) {\n    alert(\"There is already a color with this name\");\n    return;\n  }\n  const newColor = color ? color : \"#000000\";\n  colorList.push(new SavedColor(colorName, colorList.length, newColor));\n  if (isProject) {\n    writeColors(colorList);\n    reloadProjects();\n  } else {\n    projectsList[projectId].goalColors = colorList;\n    writeProjects();\n  }\n  reloadPage();\n}\nexport function deleteColor(colorList, id, isProject, projectId) {\n  colorList.splice(id, 1);\n  if (isProject) {\n    writeColors(colorList);\n    reloadProjects();\n  } else {\n    projectsList[projectId].goalColors = colorList;\n    writeProjects();\n  }\n  reloadPage();\n}\nexport function saveColor(colorList, colorObject, color, isProject, projectId) {\n  colorObject.color = color;\n  colorObject.name = document.getElementById(\"color-name-input\").value;\n  if (isProject) {\n    writeColors(colorList);\n    reloadProjects();\n  } else {\n    projectsList[projectId].goalColors = colorList;\n    writeProjects();\n  }\n}\nfunction reloadProjects() {\n  console.log(\"reloadProject\");\n  const event = new CustomEvent(\"reloadProject\");\n  document.dispatchEvent(event);\n}\nfunction reloadGoals() {\n  console.log(\"reloadProject\");\n  const event = new CustomEvent(\"reloadProject\");\n  document.dispatchEvent(event);\n}","map":{"version":3,"names":["projectsList","writeProjects","SavedColor","writeColors","addColor","colorList","color","isProject","projectId","colorName","document","getElementById","value","find","name","alert","newColor","push","length","reloadProjects","goalColors","reloadPage","deleteColor","id","splice","saveColor","colorObject","console","log","event","CustomEvent","dispatchEvent","reloadGoals"],"sources":["C:/Users/AMStudent/Desktop/ProjectTrackerRedux/project-tracker-redux/src/ColorPickerComponent/SavedColorComponent/SavedColorsScripting.js"],"sourcesContent":["import { projectsList, writeProjects } from \"../../ProjectsPage/ProjectClass\";\r\nimport { SavedColor, writeColors } from \"../SavedColorComponent/SavedColorClass\";\r\n\r\nexport function addColor(colorList, color, isProject, projectId){\r\n    const colorName = document.getElementById(\"color-name-input\").value;\r\n    if(colorList.find(color => color.name === colorName)){\r\n        alert(\"There is already a color with this name\");\r\n        return;\r\n    }\r\n    const newColor = color ? color : \"#000000\";\r\n    colorList.push(new SavedColor(colorName, colorList.length, newColor));\r\n\r\n    if(isProject) {\r\n        writeColors(colorList);\r\n        reloadProjects();\r\n    }\r\n    else{\r\n        projectsList[projectId].goalColors = colorList;\r\n        writeProjects();\r\n    }\r\n\r\n    reloadPage();\r\n}\r\n\r\nexport function deleteColor(colorList, id, isProject, projectId) {\r\n    colorList.splice(id, 1);\r\n    \r\n    if(isProject) {\r\n        writeColors(colorList);\r\n        reloadProjects();\r\n    }\r\n    else{\r\n        projectsList[projectId].goalColors = colorList;\r\n        writeProjects();\r\n    }\r\n\r\n    reloadPage();\r\n}\r\n\r\nexport function saveColor(colorList, colorObject, color, isProject, projectId) {\r\n    colorObject.color = color;\r\n    colorObject.name = document.getElementById(\"color-name-input\").value;\r\n\r\n    if(isProject) {\r\n        writeColors(colorList);\r\n        reloadProjects();\r\n    }\r\n    else{\r\n        projectsList[projectId].goalColors = colorList;\r\n        writeProjects();\r\n    }\r\n}\r\n\r\nfunction reloadProjects(){\r\n    console.log(\"reloadProject\");\r\n    const event = new CustomEvent(\"reloadProject\");\r\n    document.dispatchEvent(event);\r\n}\r\n\r\nfunction reloadGoals(){\r\n    console.log(\"reloadProject\");\r\n    const event = new CustomEvent(\"reloadProject\");\r\n    document.dispatchEvent(event);\r\n}"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,iCAAiC;AAC7E,SAASC,UAAU,EAAEC,WAAW,QAAQ,wCAAwC;AAEhF,OAAO,SAASC,QAAQ,CAACC,SAAS,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAC;EAC5D,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACC,KAAK;EACnE,IAAGP,SAAS,CAACQ,IAAI,CAACP,KAAK,IAAIA,KAAK,CAACQ,IAAI,KAAKL,SAAS,CAAC,EAAC;IACjDM,KAAK,CAAC,yCAAyC,CAAC;IAChD;EACJ;EACA,MAAMC,QAAQ,GAAGV,KAAK,GAAGA,KAAK,GAAG,SAAS;EAC1CD,SAAS,CAACY,IAAI,CAAC,IAAIf,UAAU,CAACO,SAAS,EAAEJ,SAAS,CAACa,MAAM,EAAEF,QAAQ,CAAC,CAAC;EAErE,IAAGT,SAAS,EAAE;IACVJ,WAAW,CAACE,SAAS,CAAC;IACtBc,cAAc,EAAE;EACpB,CAAC,MACG;IACAnB,YAAY,CAACQ,SAAS,CAAC,CAACY,UAAU,GAAGf,SAAS;IAC9CJ,aAAa,EAAE;EACnB;EAEAoB,UAAU,EAAE;AAChB;AAEA,OAAO,SAASC,WAAW,CAACjB,SAAS,EAAEkB,EAAE,EAAEhB,SAAS,EAAEC,SAAS,EAAE;EAC7DH,SAAS,CAACmB,MAAM,CAACD,EAAE,EAAE,CAAC,CAAC;EAEvB,IAAGhB,SAAS,EAAE;IACVJ,WAAW,CAACE,SAAS,CAAC;IACtBc,cAAc,EAAE;EACpB,CAAC,MACG;IACAnB,YAAY,CAACQ,SAAS,CAAC,CAACY,UAAU,GAAGf,SAAS;IAC9CJ,aAAa,EAAE;EACnB;EAEAoB,UAAU,EAAE;AAChB;AAEA,OAAO,SAASI,SAAS,CAACpB,SAAS,EAAEqB,WAAW,EAAEpB,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAE;EAC3EkB,WAAW,CAACpB,KAAK,GAAGA,KAAK;EACzBoB,WAAW,CAACZ,IAAI,GAAGJ,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACC,KAAK;EAEpE,IAAGL,SAAS,EAAE;IACVJ,WAAW,CAACE,SAAS,CAAC;IACtBc,cAAc,EAAE;EACpB,CAAC,MACG;IACAnB,YAAY,CAACQ,SAAS,CAAC,CAACY,UAAU,GAAGf,SAAS;IAC9CJ,aAAa,EAAE;EACnB;AACJ;AAEA,SAASkB,cAAc,GAAE;EACrBQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5B,MAAMC,KAAK,GAAG,IAAIC,WAAW,CAAC,eAAe,CAAC;EAC9CpB,QAAQ,CAACqB,aAAa,CAACF,KAAK,CAAC;AACjC;AAEA,SAASG,WAAW,GAAE;EAClBL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5B,MAAMC,KAAK,GAAG,IAAIC,WAAW,CAAC,eAAe,CAAC;EAC9CpB,QAAQ,CAACqB,aAAa,CAACF,KAAK,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}